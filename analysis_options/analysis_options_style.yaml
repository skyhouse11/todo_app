# Code style and formatting rules
linter:
  rules:
    # Naming Conventions
    camel_case_extensions: true
    camel_case_types: true
    constant_identifier_names: true
    library_names: true
    library_prefixes: true
    non_constant_identifier_names: true
    package_prefixed_library_names: true
    use_named_constants: true
    
    # Code Organization
    cascade_invocations: true
    combinators_ordering: true
    directives_ordering: true
    implementation_imports: true
    library_private_types_in_public_api: true
    no_leading_underscores_for_library_prefixes: true
    no_leading_underscores_for_local_identifiers: true
    prefer_relative_imports: true
    sort_child_properties_last: true
    sort_constructors_first: true
    sort_pub_dependencies: true
    sort_unnamed_constructors_first: true
    
    # Formatting
    always_declare_return_types: true
    always_put_control_body_on_new_line: true
    always_put_required_named_parameters_first: true
    always_specify_types: true
    annotate_overrides: true
    avoid_annotating_with_dynamic: true
    avoid_bool_literals_in_conditional_expressions: true
    avoid_catches_without_on_clauses: true
    avoid_catching_errors: true
    avoid_classes_with_only_static_members: true
    avoid_double_and_int_checks: true
    avoid_equals_and_hash_code_on_mutable_classes: true
    avoid_escaping_inner_quotes: true
    avoid_field_initializers_in_const_classes: true
    avoid_function_literals_in_foreach_calls: true
    avoid_init_to_null: true
    avoid_null_checks_in_equality_operators: true
    avoid_positional_boolean_parameters: true
    avoid_private_typedef_functions: true
    avoid_redundant_argument_values: true
    avoid_renaming_method_parameters: true
    avoid_return_types_on_setters: true
    avoid_returning_null_for_void: true
    avoid_setters_without_getters: true
    avoid_shadowing_type_parameters: true
    avoid_single_cascade_in_expression_statements: true
    avoid_unnecessary_containers: true
    avoid_unused_constructor_parameters: true
    avoid_void_async: true
    await_only_futures: true
    lines_longer_than_80_chars: false  # Disabled to allow longer lines when needed
    missing_whitespace_between_adjacent_strings: true
    omit_local_variable_types: true
    one_member_abstracts: true
    prefer_adjacent_string_concatenation: true
    prefer_const_constructors: true
    prefer_const_constructors_in_immutables: true
    prefer_const_declarations: true
    prefer_const_literals_to_create_immutables: true
    prefer_constructors_over_static_methods: true
    prefer_expression_function_bodies: true
    prefer_final_in_for_each: true
    prefer_function_declarations_over_variables: true
    prefer_generic_function_type_aliases: true
    prefer_if_elements_to_conditional_expressions: true
    prefer_inlined_adds: true
    prefer_interpolation_to_compose_strings: true
    prefer_single_quotes: true
    prefer_typing_uninitialized_variables: true
    require_trailing_commas: true
    sized_box_for_whitespace: true
    sized_box_shrink_expand: true
    slash_for_doc_comments: true
    type_annotate_public_apis: true
    unawaited_futures: true
